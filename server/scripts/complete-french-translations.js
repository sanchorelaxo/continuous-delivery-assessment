/**
 * Complete French translations for all 48 questions in MongoDB
 */

const { MongoClient } = require('mongodb');
require('dotenv').config({ path: '../../.env' });

const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/cd_assessment';
const dbName = 'cd_assessment';

// Complete French translations for all practice areas
const frenchTranslations = {
  // Release Management
  RM1: {
    text: "Strat√©gie de D√©ploiement",
    options: [
      "D√©ploiements manuels",
      "D√©ploiements script√©s de base",
      "D√©ploiements automatis√©s avec rollback",
      "D√©ploiements bleu-vert/canary",
      "D√©ploiements adaptatifs par IA"
    ]
  },
  RM2: {
    text: "Gestion des Versions",
    options: [
      "Aucun versioning",
      "Versioning manuel",
      "Versioning s√©mantique automatis√©",
      "Versioning avec m√©tadonn√©es",
      "Versioning intelligent par IA"
    ]
  },
  RM3: {
    text: "Planification des Versions",
    options: [
      "Aucune planification de version",
      "Planification basique avec coordination manuelle",
      "Planification automatis√©e avec d√©pendances",
      "Orchestration avanc√©e avec analytiques",
      "Optimisation de version par IA"
    ]
  },
  RM4: {
    text: "Gestion du Changement",
    options: [
      "Aucun processus de gestion du changement",
      "Suivi et approbations basiques des changements",
      "Workflow automatis√© de gestion du changement",
      "Gestion du changement bas√©e sur les risques",
      "Analyse d'impact du changement par IA"
    ]
  },
  RM5: {
    text: "Validation des Versions",
    options: [
      "Aucune validation de version",
      "Tests de fum√©e basiques post-d√©ploiement",
      "Suite de validation automatis√©e avec surveillance",
      "Validation avanc√©e avec surveillance synth√©tique",
      "√âvaluation de qualit√© de version par IA"
    ]
  },
  RM6: {
    text: "Documentation des Versions",
    options: [
      "Aucune documentation de version",
      "Notes de version et logs basiques",
      "G√©n√©ration automatis√©e de documentation",
      "Documentation compl√®te avec m√©triques",
      "Documentation assist√©e par IA avec analyse d'impact"
    ]
  },

  // Testing
  TEST1: {
    text: "Tests Unitaires",
    options: [
      "Aucun test unitaire",
      "Tests unitaires basiques",
      "Tests unitaires avec couverture",
      "Tests unitaires avec mutation testing",
      "Tests unitaires optimis√©s par IA"
    ]
  },
  TEST2: {
    text: "Tests d'Int√©gration",
    options: [
      "Aucun test d'int√©gration",
      "Tests d'int√©gration manuels",
      "Tests d'int√©gration automatis√©s",
      "Tests d'int√©gration avec environnements d√©di√©s",
      "Tests d'int√©gration adaptatifs par IA"
    ]
  },
  TEST3: {
    text: "Tests de Performance",
    options: [
      "Aucun test de performance",
      "Tests de performance ad-hoc",
      "Tests de performance automatis√©s",
      "Tests de performance avec profiling",
      "Optimisation de performance par IA"
    ]
  },
  TEST4: {
    text: "Tests de S√©curit√©",
    options: [
      "Aucun test de s√©curit√©",
      "Scans de s√©curit√© basiques",
      "Tests de s√©curit√© automatis√©s",
      "Tests de s√©curit√© avec threat modeling",
      "S√©curit√© pr√©dictive par IA"
    ]
  },
  TEST5: {
    text: "Tests d'Acceptation",
    options: [
      "Aucun test d'acceptation",
      "Tests d'acceptation manuels",
      "Tests d'acceptation automatis√©s",
      "BDD avec tests d'acceptation",
      "Tests d'acceptation intelligents par IA"
    ]
  },
  TEST6: {
    text: "Strat√©gie de Test",
    options: [
      "Aucune strat√©gie de test",
      "Strat√©gie de test basique",
      "Strat√©gie de test compl√®te",
      "Strat√©gie de test adaptative",
      "Strat√©gie de test optimis√©e par IA"
    ]
  },

  // Data Management
  DATA1: {
    text: "Gestion des Donn√©es",
    options: [
      "Gestion manuelle des donn√©es",
      "Scripts de gestion des donn√©es",
      "Gestion automatis√©e des donn√©es",
      "Gestion des donn√©es avec gouvernance",
      "Gestion des donn√©es par IA"
    ]
  },
  DATA2: {
    text: "Sauvegarde et R√©cup√©ration",
    options: [
      "Aucune sauvegarde",
      "Sauvegardes manuelles",
      "Sauvegardes automatis√©es",
      "Sauvegardes avec test de r√©cup√©ration",
      "Sauvegardes intelligentes par IA"
    ]
  },
  DATA3: {
    text: "Versioning des Donn√©es",
    options: [
      "Aucun versioning des donn√©es",
      "Versioning manuel des sch√©mas",
      "Migrations automatis√©es de sch√©mas",
      "Versioning avec rollback",
      "√âvolution de sch√©ma par IA"
    ]
  },
  DATA4: {
    text: "Migration des Donn√©es",
    options: [
      "Aucun processus de migration",
      "Migration manuelle avec validation basique",
      "Migration automatis√©e avec v√©rification",
      "Migration sans interruption",
      "Optimisation de migration par IA"
    ]
  },
  DATA5: {
    text: "Qualit√© des Donn√©es",
    options: [
      "Aucun contr√¥le qualit√©",
      "R√®gles basiques de validation",
      "V√©rifications automatis√©es de qualit√©",
      "Surveillance proactive de la qualit√©",
      "Optimisation de qualit√© par IA"
    ]
  },
  DATA6: {
    text: "Conformit√© des Donn√©es",
    options: [
      "Aucune conformit√©",
      "Conformit√© basique",
      "Conformit√© automatis√©e",
      "Conformit√© avec audit trail",
      "Conformit√© intelligente par IA"
    ]
  },

  // Configuration Management
  CM1: {
    text: "Gestion de Configuration",
    options: [
      "Configuration manuelle",
      "Fichiers de configuration",
      "Configuration comme code",
      "Configuration avec validation",
      "Configuration adaptative par IA"
    ]
  },
  CM2: {
    text: "Gestion des Secrets",
    options: [
      "Secrets en dur dans le code",
      "Fichiers de secrets s√©par√©s",
      "Coffre-fort de secrets",
      "Rotation automatique des secrets",
      "Gestion de secrets par IA"
    ]
  },
  CM3: {
    text: "D√©rive de Configuration",
    options: [
      "Aucune d√©tection de d√©rive",
      "V√©rifications manuelles",
      "D√©tection automatis√©e de d√©rive",
      "Correction automatique de d√©rive",
      "Pr√©vention de d√©rive par IA"
    ]
  },
  CM4: {
    text: "Gestion des Environnements",
    options: [
      "Environnements configur√©s manuellement",
      "Environnements standardis√©s",
      "Environnements reproductibles",
      "Environnements immutables",
      "Environnements adaptatifs par IA"
    ]
  },
  CM5: {
    text: "Audit de Configuration",
    options: [
      "Aucun audit",
      "Audit manuel",
      "Audit automatis√©",
      "Audit avec conformit√©",
      "Audit intelligent par IA"
    ]
  },
  CM6: {
    text: "Rollback de Configuration",
    options: [
      "Aucun rollback",
      "Rollback manuel",
      "Rollback automatis√©",
      "Rollback avec validation",
      "Rollback pr√©dictif par IA"
    ]
  },

  // Observability
  OBS1: {
    text: "Surveillance des Applications",
    options: [
      "Aucune surveillance",
      "Logs basiques",
      "M√©triques et alertes",
      "Surveillance compl√®te (logs, m√©triques, traces)",
      "Surveillance intelligente par IA"
    ]
  },
  OBS2: {
    text: "Gestion des Logs",
    options: [
      "Aucune gestion de logs",
      "Logs locaux",
      "Logs centralis√©s",
      "Logs structur√©s avec recherche",
      "Analyse de logs par IA"
    ]
  },
  OBS3: {
    text: "M√©triques et Alertes",
    options: [
      "Aucune m√©trique",
      "M√©triques basiques",
      "M√©triques avec alertes",
      "M√©triques avec SLI/SLO",
      "M√©triques pr√©dictives par IA"
    ]
  },
  OBS4: {
    text: "Tra√ßage Distribu√©",
    options: [
      "Aucun tra√ßage",
      "Tra√ßage basique",
      "Tra√ßage distribu√©",
      "Tra√ßage avec analyse de performance",
      "Tra√ßage intelligent par IA"
    ]
  },
  OBS5: {
    text: "Tableaux de Bord",
    options: [
      "Aucun tableau de bord",
      "Tableaux de bord statiques",
      "Tableaux de bord interactifs",
      "Tableaux de bord adaptatifs",
      "Tableaux de bord par IA"
    ]
  },
  OBS6: {
    text: "Analyse des Incidents",
    options: [
      "Aucune analyse d'incident",
      "Post-mortems manuels",
      "Analyse automatis√©e d'incidents",
      "Analyse pr√©dictive d'incidents",
      "Pr√©vention d'incidents par IA"
    ]
  }
};

async function addAllFrenchTranslations() {
  const client = new MongoClient(mongoUri);
  
  try {
    await client.connect();
    console.log('üîå Connected to MongoDB');
    
    const db = client.db(dbName);
    const collection = db.collection('questions');
    
    let updatedCount = 0;
    let notFoundCount = 0;
    
    console.log('üîÑ Adding French translations to all questions...\n');
    
    // Update each question with French translations
    for (const [questionId, frenchData] of Object.entries(frenchTranslations)) {
      const question = await collection.findOne({ id: questionId });
      
      if (question && question.options) {
        const updatedOptions = question.options.map((option, index) => ({
          ...option,
          text: {
            ...option.text,
            fr_CA: frenchData.options[index] || option.text.en_CA
          }
        }));
        
        await collection.updateOne(
          { id: questionId },
          {
            $set: {
              'text.fr_CA': frenchData.text,
              options: updatedOptions,
              updatedAt: new Date()
            }
          }
        );
        
        updatedCount++;
        console.log(`‚úÖ ${questionId}: ${frenchData.text}`);
      } else {
        notFoundCount++;
        console.log(`‚ùå Question ${questionId} not found`);
      }
    }
    
    console.log(`\nüéâ Translation Summary:`);
    console.log(`   ‚úÖ Updated: ${updatedCount} questions`);
    console.log(`   ‚ùå Not found: ${notFoundCount} questions`);
    
    // Verify the total count
    const totalWithFrench = await collection.countDocuments({ 'text.fr_CA': { $exists: true, $ne: '' } });
    console.log(`   üìä Total questions with French: ${totalWithFrench}/48`);
    
    // Show a sample
    const sample = await collection.findOne({ id: 'RM1' });
    if (sample) {
      console.log(`\nüìã Sample verification (${sample.id}):`);
      console.log(`   EN: ${sample.text.en_CA}`);
      console.log(`   FR: ${sample.text.fr_CA}`);
      console.log(`   Option 1 EN: ${sample.options[0].text.en_CA}`);
      console.log(`   Option 1 FR: ${sample.options[0].text.fr_CA}`);
    }
    
  } catch (error) {
    console.error('‚ùå Error updating translations:', error);
  } finally {
    await client.close();
    console.log('\nüîå MongoDB connection closed');
  }
}

// Run the script
addAllFrenchTranslations();
